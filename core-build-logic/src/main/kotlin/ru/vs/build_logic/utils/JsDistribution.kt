package ru.vs.build_logic.utils

import org.gradle.api.Project
import org.gradle.api.artifacts.Configuration
import org.gradle.api.tasks.Copy
import org.gradle.configurationcache.extensions.capitalized
import org.gradle.kotlin.dsl.register

/**
 * Creates [Configuration] that contains compiled js code and resources generated by given task
 * @param configurationName - configuration name
 * @param jsBuildTask - jsDistributionTask (task that produce compiled js code)
 * @param additionalDirs - additional parent path
 */
fun Project.configureJsDistribution(
    configurationName: String,
    jsBuildTask: String,
    additionalDirs: String = "resources/web"
) {
    configurations.create(configurationName) {
        isCanBeConsumed = true
        isCanBeResolved = false
    }

    val outputDir = project.buildDir
        .resolve("jsDistributions")
        .resolve(configurationName)

    val assembleTask = tasks.register<Copy>("assemble${configurationName.capitalized()}") {
        val buildTask = tasks.named(jsBuildTask)
        from(buildTask.map { it.outputs.files.files.single() })
        into(outputDir.resolve(additionalDirs))
        dependsOn(buildTask)
    }

    artifacts {
        add(
            configurationName,
            assembleTask.map { outputDir }
        )
    }
}