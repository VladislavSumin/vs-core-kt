[versions]
# Kotlin
kotlin-core = "1.8.0"
#kotlin-coroutines = "1.6.4"

# Android
#android-core = "1.9.0"
#android-datastore = "1.0.0"
#android-activity = "1.6.0"
#android-compose-core = "1.2.1"
#android-compose-compiler = "1.3.2"

# UI libs
#reorderable = "0.9.2"

# Google
#google-serivces = "4.3.13"
#google-firebase-bom = "31.0.0"
#google-firebase-crashlytic = "2.9.1"

# Other
#kodein = "7.14.0"
#decompose = "1.0.0-alpha-06"
#serial-usb = "3.4.6"
#multiplatformSettings = "0.9"

#jb-compose = "1.3.0-alpha01-dev824"

gradlePlugins-android = "7.4.0-beta02" # last version supported by idea comunity 2022.3.3
#gradlePlugins-checkUpdates = "0.42.0"
#gradlePlugins-sqldelight = "1.5.3"
#gradlePlugins-detekt = "1.21.0"


[libraries]
# Plugins
gradlePlugins-kotlin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
gradlePlugins-android = { module = "com.android.tools.build:gradle", version.ref = "gradlePlugins-android" }
#gradlePlugins-jb-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jb-compose" }
#gradlePlugins-checkUpdates = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradlePlugins-checkUpdates" }
#gradlePlugins-google-services = { module = "com.google.gms:google-services", version.ref = "google-serivces" }
#gradlePlugins-google-firebase-crashlytic = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "google-firebase-crashlytic" }
#gradlePlugins-sqldelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "gradlePlugins-sqldelight" }
#gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "gradlePlugins-detekt" }
#
## Kotlin
#kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
#kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
#
## Android
#android-core = { module = "androidx.core:core-ktx", version.ref = "android-core" }
#android-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "android-datastore" }
#android-activity-core = { module = "androidx.activity:activity-ktx", version.ref = "android-activity" }
#android-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-activity" }
#android-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "android-compose-core" }
#android-compose-material = { module = "androidx.compose.material:material", version.ref = "android-compose-core" }
#android-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "android-compose-core" }
#android-compose-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "android-compose-core" }
#
## UI libs
#reorderable = { module = "org.burnoutcrew.composereorderable:reorderable", version.ref = "reorderable" }
#
## Google
#google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "google-firebase-bom" }
#
## Kodein
#kodein-core = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
#kodein-compose = { module = "org.kodein.di:kodein-di-framework-compose", version.ref = "kodein" }
#
## Decompose
#decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
#decompose-jetpack = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
#decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
#decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }
#
## Oher
#serial-usb = { module = "com.github.mik3y:usb-serial-for-android", version.ref = "serial-usb" }
#multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
#detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "gradlePlugins-detekt" }
