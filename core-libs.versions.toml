[versions]
vs-core = "0.1.0"

# Kotlin
kotlin-core = "1.8.20"
ksp = "1.8.20-1.0.11"
kotlin-coroutines = "1.7.0-RC"
kotlin-serialization = "1.5.0"
kotlin-atomicfu = "0.20.2"

# Android
android-core = "1.7.0"
android-activity-compose = "1.7.1"
android-compose-compiler = "1.4.6"

# Compose
jb-compose = "1.4.0"
decompose = "2.0.0-compose-experimental-alpha-02"

# Logging
logging-log4j = "2.20.0"
logging-slf4j = "1.7.36"
logging-kotlinLogging = "4.0.0-beta-28"

# Other
kodein = "7.20.1"
ktor = "2.3.0"
kotlinpoet = "1.13.0"
sqldelight = "2.0.0-alpha05"
mvikotlin = "3.2.0"


# Testing
testing-junit5-core = "5.8.2"
testing-junit5-platformSuite = "1.8.2"
# TODO заменить на mockk
testing-mockito-core = "4.3.1"
testing-mockito-kotlin = "4.0.0"
testing-turbine = "0.7.0"

# Plugins
gradlePlugins-android = "7.4.1" # last version supported by idea comunity 2022.3.3
gradlePlugins-checkUpdates = "0.46.0"
gradlePlugins-detekt = "1.21.0"
gradlePlugins-buildConfig = "3.0.3"


[libraries]
# Core
vs-core-compose = { module = "ru.vs.core:compose", version.ref = "vs-core" }
vs-core-coroutines = { module = "ru.vs.core:coroutines", version.ref = "vs-core" }
vs-core-database = { module = "ru.vs.core:database", version.ref = "vs-core" }
vs-core-decompose = { module = "ru.vs.core:decompose", version.ref = "vs-core" }
vs-core-di = { module = "ru.vs.core:di", version.ref = "vs-core" }
vs-core-ktor-client = { module = "ru.vs.core:ktor-client", version.ref = "vs-core" }
vs-core-ktor-server = { module = "ru.vs.core:ktor-server", version.ref = "vs-core" }
vs-core-logging = { module = "ru.vs.core:logging", version.ref = "vs-core" }
vs-core-mvi = { module = "ru.vs.core:mvi", version.ref = "vs-core" }
vs-core-serialization-core = { module = "ru.vs.core.serialization:core", version.ref = "vs-core" }
vs-core-serialization-json = { module = "ru.vs.core.serialization:json", version.ref = "vs-core" }
vs-core-uikit-dropdownMenu = { module = "ru.vs.core.uikit:dropdown-menu", version.ref = "vs-core" }
vs-core-utils = { module = "ru.vs.core:utils", version.ref = "vs-core" }

# Plugins
gradlePlugins-kotlin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
gradlePlugins-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-core" }
gradlePlugins-kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "kotlin-atomicfu" }
gradlePlugins-ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }
gradlePlugins-android = { module = "com.android.tools.build:gradle", version.ref = "gradlePlugins-android" }
gradlePlugins-jb-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jb-compose" }
gradlePlugins-checkUpdates = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradlePlugins-checkUpdates" }
gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "gradlePlugins-detekt" }
gradlePlugins-buildConfig = { module = "com.github.gmazzo:gradle-buildconfig-plugin", version.ref = "gradlePlugins-buildConfig" }
gradlePlugins-sqldelight = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }

# Kotlin
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }

# Ktor
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-websocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-websocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }

# Kodein
kodein-core = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-android = { module = "org.kodein.di:kodein-di-framework-android-x", version.ref = "kodein" }

# Android
android-core = { module = "androidx.core:core-ktx", version.ref = "android-core" }
android-activity = { module = "androidx.activity:activity-ktx", version.ref = "android-core" }
android-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-activity-compose" }

# Decompose
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }

# Sqldelight
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqljs = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# Logging
logging-kotlinLogging-core = { module = "io.github.oshai:kotlin-logging", version.ref = "logging-kotlinLogging" }
logging-log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "logging-log4j" }
logging-log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "logging-log4j" }
logging-log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "logging-log4j" }
logging-slf4j = { module = "org.slf4j:slf4j-api", version.ref = "logging-slf4j" }

# Code generation
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

# MVI Kotlin
mvikotlin-core = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlin-extensions-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }

# Other
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "gradlePlugins-detekt" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlin-atomicfu" }

# Testing
testing-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "testing-junit5-core" }
testing-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "testing-junit5-core" }
testing-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "testing-junit5-core" }
testing-jupiter-platformSuite = { module = "org.junit.platform:junit-platform-suite", version.ref = "testing-junit5-platformSuite" }
testing-mockito-core = { module = "org.mockito:mockito-core", version.ref = "testing-mockito-core" }
testing-mockito-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "testing-mockito-core" }
testing-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "testing-mockito-kotlin" }
testing-turbine = { module = "app.cash.turbine:turbine", version.ref = "testing-turbine" }